<!--
 |
 | Invoke this script from within the root source directory of a Maven web application 
 | project (such as one created by the com.googlecode.cernunnos:cernunnos-webapp Maven 
 | archetype).
 |
 | PARAMETERS:
 |   $1: The name of the Servlet you want to define (e.g. 'AddressBook')
 |
 +-->
  <choose>
    <when test="${groovy(!(new File('pom.xml').exists()))}">
    
        <!-- We do not appear to be in an appropriate project... -->
        <echo-ln>ERROR:  No pom.xml file found;  invoke this tool within a Maven web application project</echo-ln>
    
    </when>
    <otherwise>
    
        <!-- Proceed... -->
	    <with-attribute key="Attributes.NODE" value="${parseXml(src/main/webapp/WEB-INF/web.xml)}">
	
	        <!-- Copy needed files -->
	        <write-file string="${phrase(${Attributes.ORIGIN}/../util/context.xml)}" file="src/main/webapp/WEB-INF/${$1}-servlet.xml"/>
	        <write-file string="${phrase(${Attributes.ORIGIN}/../util/index.crn)}" file="src/main/webapp/WEB-INF/views/${$1}/index.crn"/>
	        <write-file string="${phrase(${Attributes.ORIGIN}/../util/servlet-index.jsp)}" file="src/main/webapp/WEB-INF/jsp/${$1}/index.jsp"/>
	
	        <!-- Adjust web.xml -->
	        <if test="${groovy(Attributes.NODE.selectSingleNode('(./node()[local-name() = \'description\'] | ./node()[local-name() = \'display-name\'] | ./node()[local-name() = \'icon\'])[position() = last()]') == null)}">
	            <!-- We must ensure there's some content in web.xml from which we can hang our new content... -->
	            <prepend-node>
	                <description>Web Application Prepared by Cernunnos.</description>
	            </prepend-node>
	        </if>
	        <append-node sibling="${singleNode((./node()[local-name() = 'listener'] | ./node()[local-name() = 'filter-mapping'] | ./node()[local-name() = 'filter'] | ./node()[local-name() = 'context-param'] | ./node()[local-name() = 'distributable'] | ./node()[local-name() = 'description'] | ./node()[local-name() = 'display-name'] | ./node()[local-name() = 'icon'])[position() = last()])}">
	            <servlet>
	                <servlet-name>${$1}</servlet-name>
	                <servlet-class>org.danann.cernunnos.runtime.web.CernunnosServlet</servlet-class>
	            </servlet>
	        </append-node>
	        <append-node sibling="${singleNode((./node()[local-name() = 'servlet'])[position() = last()])}">
	            <servlet-mapping>
	                <servlet-name>${$1}</servlet-name>
	                <url-pattern>/${$1}/*</url-pattern>
	            </servlet-mapping>
	        </append-node>
	        <write-document file="src/main/webapp/WEB-INF/web.xml"/>
	
	    </with-attribute>

    </otherwise>
 </choose>
 